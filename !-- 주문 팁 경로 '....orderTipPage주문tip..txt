 <!-- 주문 팁 경로 '../../orderTipPage/주문tip.html' -->

.how_body_nav_left {
    width: 50%;
    border: 1px solid #ddd;
    height: 100%;
    background-color: white;
    font-family: "Noto Sans KR", serif;
    font-weight: 400;
    color: #495057;
    text-align: center;
    font-size: 18px;
    padding: 0;
    transition: all 0.3s ease;
}

.how_body_nav_right {
    width: 50%;
    border: 1px solid #ddd;
    height: 100%;
    background-color: white;
    font-family: "Noto Sans KR", serif;
    font-weight: 400;
    color: #495057;
    text-align: center;
    font-size: 18px;
    padding: 0;
    transition: all 0.3s ease;
}

.how_body_nav_left.active,
.how_body_nav_right.active {
    background-color: #009223;
    color: white;
}

.how_body_nav_left:hover,
.how_body_nav_right:hover {
    cursor: pointer;
}

document.addEventListener('DOMContentLoaded', function() {
    const leftNav = document.querySelector('.how_body_nav_left');
    const rightNav = document.querySelector('.how_body_nav_right');

    // Set initial state (left nav active by default)
    leftNav.classList.add('active');

    leftNav.addEventListener('click', function() {
        leftNav.classList.add('active');
        rightNav.classList.remove('active');
    });

    rightNav.addEventListener('click', function() {
        rightNav.classList.add('active');
        leftNav.classList.remove('active');
    });
});


document.addEventListener('DOMContentLoaded', function() {
    // 상단 네비게이션 활성화
    const headerNavItems = document.querySelectorAll('.how_header_nav p');
    
    // 첫 번째 아이템(써브웨이 이용방법)을 활성화
    headerNavItems[0].classList.add('active');
    
    // 클릭 이벤트 추가 (구분점 제외)
    headerNavItems.forEach((item, index) => {
        // 구분점(·)이 아닌 경우에만 클릭 이벤트 추가
        if (index % 2 === 0) {
            item.addEventListener('click', function() {
                // 모든 아이템의 활성화 상태 제거
                headerNavItems.forEach(nav => nav.classList.remove('active'));
                // 클릭된 아이템 활성화
                this.classList.add('active');
            });
        }
    });
});


@keyframes slideUp {
    from {
        transform: translateY(30px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.description-content {
    animation: slideUp 0.5s ease-out forwards;
}

.how_description {
    width: 400px;
    height: 450px;
    position: absolute;
    background-color: white;
    z-index: 3;
    top: 0px;
    left: 55%;
    overflow: hidden; /* 애니메이션이 컨테이너를 벗어나지 않도록 */
}

.description-content p {
    opacity: 0;
    animation: slideUp 0.5s ease-out forwards;
}

.description-content p:nth-child(1) { animation-delay: 0.1s; }
.description-content p:nth-child(2) { animation-delay: 0.2s; }
.description-content p:nth-child(3) { animation-delay: 0.3s; }
.description-content p:nth-child(4) { animation-delay: 0.4s; }
.description-content .additional_button { 
    opacity: 0;
    animation: slideUp 0.5s ease-out forwards;
    animation-delay: 0.5s; 
}


function renderDescription() {
    let howDes = document.querySelector('.how_description');
    
    // 새로운 content div 생성
    const des = document.createElement('div');
    des.className = 'description-content';
    const bread = descriptionList;
    
    des.innerHTML = `
        <p class="description_step" style="margin: 0; margin-left: 50px; margin-top: 40px;">${bread[currentIndex].step}</p>
        <p class="description_title" style="margin: 0; margin-left: 50px;">${bread[currentIndex].title}</p>
        <p class="description_bar" style="margin: 0;margin-top: 20px; margin-left: 50px;"></p>
        <p class="description_info" style="margin: 0; margin-top: 20px; margin-left: 50px;">${bread[currentIndex].description}</p>
        <div class="additional_button">${bread[currentIndex].button1}</div>
    `;

    // 기존 content를 제거하고 새로운 content 추가
    const oldContent = howDes.querySelector('.description-content');
    if (oldContent) {
        oldContent.remove();
    }
    howDes.appendChild(des);
}
